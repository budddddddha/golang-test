version: 2
jobs:
  build:
    machine: true
    working_directory: /home/circleci/go/src
    # working_directory: /home/circleci/go/src
    # working_directory: /tmp
    # environment:
    #   BASH_ENV=/tmp/.bash_env-localbuild-1566048773
    #   CI=true
    #   CIRCLECI=true
    #   CIRCLE_BRANCH=master
    #   CIRCLE_BUILD_NUM=
    #   CIRCLE_JOB=build
    #   CIRCLE_NODE_INDEX=0
    #   CIRCLE_NODE_TOTAL=1
    #   CIRCLE_REPOSITORY_URL=git@github.com:budddddddha/golang-test.git
    #   CIRCLE_SHA1=2eaf0eb0545688e4fa72d63459ac824b2467ec2b
    #   CIRCLE_SHELL_ENV=/tmp/.bash_env-localbuild-1566048773
    #   CIRCLE_WORKING_DIRECTORY=/tmp/_circleci_local_build_repo
    steps:
      # - run: echo 'export PATH=${GOPATH}/bin/:${PATH}' >> $BASH_ENV
      - checkout
      # - run:
      #   name: Install Docker Compose
      #   command: |
      #     curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
      #     chmod +x ~/docker-compose
      #     sudo mv ~/docker-compose /usr/local/bin/docker-compose
      # - setup_remote_docker
      - run: docker-compose build
      - run: docker-compose up -d
      - run: docker-compose exec app go test .
      # - run: go get github.com/julienschmidt/httprouter
      # - run: go get gopkg.in/gavv/httpexpect.v2
      # - run: go run . &
      # - run: go test ./...
      # - run: go get -v -t -d ./...
      # - run: go get github.com/golang/lint/golint
      # - run: go get github.com/haya14busa/goverage
      # - run: golint ./...
      # - run: go vet ./...
      # - run: go test -v -race ./...
      # - run: goverage -coverprofile=./coverage.text ./...
      # - run: bash <(curl -s https://codecov.io/bash)
  # deploy:
  #   environment:
  #     - GOPATH: /home/circleci/go
  #   docker:
  #    - image: circleci/golang:1.9
  #   steps:
  #     - run: echo 'export PATH=${GOPATH}/bin/:${PATH}' >> $BASH_ENV
  #     - checkout
  #     - run: go get -v -t -d ./...
  #     - run: go get github.com/mitchellh/gox
  #     - run: go get github.com/tcnksm/ghr
  #     - run: gox -output "${GOPATH}/pkg/{{.Dir}}_{{.OS}}_{{.Arch}}"  ./ ./...
  #     - run: ghr -u $CIRCLE_PROJECT_USERNAME $CIRCLE_TAG $GOPATH/pkg/

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
  # deploy:
  #   jobs:
  #     - deploy:
  #         filters:
  #           branches:
  #             ignore: /.*/
  #           tags:
  #             only: /v[0-9]+(\.[0-9]+)*/
